name: Check and GitHub Release Upload

on:
  push:
    # branches:
    #   - 'main'
    tags:
    - '*'
  pull_request:
    branches:
      - '*'

jobs:
  ubuntu22:
    name: Ubuntu 22.04 x86_64
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Get tags
        run: |
          git fetch --tags
          git tag --list

      - name: Install pip
        run: sudo apt-get install -y python3-pip

      - name: Check style
        run: |
          python3 -m pip install pycodestyle
          export PATH=$PATH:$HOME/.local/bin
          pycodestyle examples/*

      - name: Install prerequisites
        run: |
          python3 -m pip install -r requirements.txt -r requirements-dev.txt -r requirements-docs.txt
          python3 -m pip install auditwheel twine

      - name: Create wheel
        run: |
          python3 setup.py bdist_wheel
          mkdir wheelhouse
          export PATH=$PATH:$HOME/.local/bin
          auditwheel repair --plat manylinux2014_x86_64 dist/*.whl

      # - name: Rename wheel for clarity
      #   run: |
      #     mavsdk_version="3.2.0"
      #     striker_version="1.0.1"
      #     os_name="ubuntu22.04"
      #     arch="x86_64"
      #     for f in wheelhouse/*.whl; do
      #       mv "$f" "wheelhouse/mavsdk-${mavsdk_version}-striker-${striker_version}-${os_name}-${arch}.whl"
      #     done

      - name: Check the artifacts
        run: |
          ls -lh "wheelhouse/"

      - name: Create docs
        run: |
          export PATH=$PATH:$HOME/.local/bin
          make -C mavsdk html

      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: wheelhouse/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ubuntu22-other:
    name: Ubuntu 22.04 ${{ matrix.arch }}
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        include:
          - arch: armv6l
            pypi_arch: linux_armv6l
          - arch: armv7l
            pypi_arch: linux_armv7l
          - arch: aarch64
            pypi_arch: manylinux2014_aarch64

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Get tags
        run: |
          git fetch --tags
          echo $?
          git tag --list

      - name: Install pip
        run: sudo apt-get install -y python3-pip

      - name: Install prerequisites
        run: |
          python3 -m pip install -r requirements.txt -r requirements-dev.txt
          python3 -m pip install twine

      - name: Create wheel
        run: |
          export MAVSDK_SERVER_ARCH=${{ matrix.arch }}
          python3 setup.py bdist_wheel
          ls dist/*any.whl | sed -e 'p;s/any/${{ matrix.pypi_arch }}/' | xargs -n2 mv

      # - name: Rename wheel for clarity
      #   run: |
      #     mavsdk_version="3.2.0"
      #     striker_version="1.0.1"
      #     os_name="ubuntu22.04"
      #     arch="${{ matrix.arch }}"
      #     for f in dist/*.whl; do
      #       mv "$f" "dist/mavsdk-${mavsdk_version}-striker-${striker_version}-${os_name}-${arch}.whl"
      #     done

      - name: Check the artifacts
        run: |
          ls -lh "dist/"

      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  macOS:
    name: macOS ${{ matrix.arch }}
    runs-on: ${{ matrix.runs_on }}
    strategy:
      matrix:
        include:
          - arch: x64
            wheel_arch: 10_9_x86_64
            runs_on: macos-13
          - arch: arm64
            wheel_arch: 11_0_arm64
            runs_on: macos-14
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Get tags
        run: |
          git fetch --tags
          echo $?
          git tag --list

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install prerequisites
        run: |
          python -m pip install -r requirements.txt
          python -m pip install twine wheel
          python -m pip install --user delocate

      - name: Create wheel
        run: |
          python setup.py bdist_wheel
          export PATH="$(python -m site --user-base)/bin:$PATH"
          delocate-wheel -w wheelhouse -v dist/*.whl
          ls wheelhouse/*any.whl | sed -e 'p;s/any/macosx_${{ matrix.wheel_arch }}/' | xargs -n2 mv

      # - name: Rename wheel for clarity
      #   run: |
      #     mavsdk_version="3.2.0"
      #     striker_version="1.0.1"
      #     os_name="macos-${{ matrix.runs_on == 'macos-13' && '13' || '14' }}"
      #     arch="${{ matrix.arch }}"
      #     for f in wheelhouse/*.whl; do
      #       mv "$f" "wheelhouse/mavsdk-${mavsdk_version}-striker-${striker_version}-${os_name}-${arch}.whl"
      #     done

      - name: Check the artifacts
        run: |
          ls -lh "wheelhouse/"

      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: wheelhouse/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Windows:
    name: Windows (${{ matrix.arch }})
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - arch: x86
            wheel_arch: win32
          - arch: x64
            wheel_arch: win_amd64

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive

      - name: Get tags
        run: |
          git fetch --tags
          echo $?
          git tag --list

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          architecture: ${{ matrix.arch }}

      - name: Install prerequisites
        run: |
          python3 -m pip install -r requirements.txt -r requirements-dev.txt
          python3 -m pip install twine wheel

      - name: Create wheel
        run: |
          python3 setup.py bdist_wheel
          Dir "dist/" | rename-item -NewName {$_.name -replace '-any.whl','-${{ matrix.wheel_arch }}.whl'}

      # - name: Rename wheel for clarity
      #   shell: pwsh
      #   run: |
      #     $mavsdk_version = "3.2.0"
      #     $striker_version = "1.0.1"
      #     $os_name = "windows"
      #     $arch = "${{ matrix.wheel_arch }}"
      #     Get-ChildItem dist/*.whl | Rename-Item -NewName { "mavsdk-$mavsdk_version-striker-$striker_version-$os_name-$arch.whl" }

      - name: Check the artifacts
        run: |
          ls "dist/"

      - name: Upload to GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}